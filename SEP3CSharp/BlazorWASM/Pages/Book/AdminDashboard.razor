
@page "/AdminDashboard"
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using Domain.Models
@attribute [Authorize(Roles = "Admin")]
@inject IUserService userService
@inject IBookService bookService
@inject NavigationManager navMgr;

<link rel="stylesheet" href="AdminDashboard.razor.css">

<h3 class="dashboard-header">Admin Dashboard</h3>

@if (isLibrarian || isLibrarian == false)
{
    <h3 class="greeting">Hello @name</h3>
    <div class="section">
        <h4 class="section-header">Users</h4>
        @if (users == null)
        {
            <span class="loading-message">Loading users...</span>
        }
        else if (!users.Any())
        {
            <span class="empty-message">No users to display</span>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Is Librarian</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in users)
                    {
                        <tr>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>@user.Email</td>
                            <td>@user.Password</td>
                            <td>@user.IsLibrarian</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="section">
        <h4 class="section-header">Books</h4>
        @if (books == null)
        {
            <span class="loading-message">Loading books...</span>
        }
        else if (!books.Any())
        {
            <span class="empty-message">No books to display</span>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Book ID</th>
                        <th>Borrower</th>
                        <th>Title</th>
                        <th>Author</th>
                        <th>ISBN</th>
                        <th>Genre</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in books)
                    {
                        <tr>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td>@book.Isbn</td>
                            <td>@book.Genre</td>
                            <td>@book.Reviews</td>
                            <td>@book.Description</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
}
else
{
    <p class="error-message">You are not authorized to access this page.</p>
}

@code {
    private bool isLibrarian;
    private ICollection<BookRegistry>? books;
    private ICollection<Book>? book;
    private string name;
    private ICollection<User>? users;

    protected override async Task OnInitializedAsync()
    {
        // ... (same as before)

        if (isLibrarian)
        {
            try
            {
                //books = await bookService.GetBooks();
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                // msg = e.Message;
            }
        }
    }
}
