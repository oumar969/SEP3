@page "/Profile"
@using HttpClients.ClientInterfaces
@using Microsoft.AspNetCore.Components
@using Newtonsoft.Json
@using System.Security.Claims

@inject IUserService userClient
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Profil</h3>
<AuthorizeView>
    @* Profile-side skal vises som en del af din MainLayout-side, når brugeren har rollen "user", *@
    <Authorized>
        <div class="card">
            <div class="card-body">
                <p>
                    <strong>Email: </strong>@user.Identity.Name
                </p>
                <p>
                    <strong>Navn: </strong>@firstName
                </p>
                <p>
                    <strong>Efternavn: </strong>@lastName
                </p>
                <p>
                    <strong>UUID: </strong>@uuid
                </p>
                <p>
                    <strong>bøde: </strong>@fee
                </p>
                <p>
                    <strong>Antal af lånebøger: </strong>@bookCount
                </p>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>Login for at se denne side.</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public string Email { get; set; }

    private string uuid;
    private string firstName;
    private string lastName;
    private double fee;
    private string bookCount;
    private AuthenticationState authState;
    private ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var userDetails = await userClient.GetUserByEmailAsync(user.Identity.Name);
    //Console.WriteLine(userDetails.Email); THHIS WORKS

            if (userDetails != null)
            {
                Email = userDetails.Email;
                firstName = userDetails.FirstName;
                lastName = userDetails.LastName;
                uuid = userDetails.UUID;
            }
    // Email = userDetails.Email;
    // firstName = userDetails.FirstName;
    // lastName = userDetails.LastName;
    // fee = userDetails.Fee;
    // bookCount = userDetails.BookCount;
        }
    }

    // protected override async Task OnInitializedAsync()
    // {
    // // var user = await userClient.GetByIdAsync(Email);
    // // Email = user.Email;
    // // firstName = user.FirstName;
    // // lastName = user.LastName;
    // // uuid = user.Uuid;
    // // fee = user.Fee;
    //
    // // var ratingDto = await _ratingClient.GetRatingMeanBySubject(Email);
    // // rating = ratingDto.Rating;
    // }

}