@page "/Login"
@* @inject IAuthService authService *@
@inject NavigationManager navMgr

<CascadingAuthenticationState>

    <AuthorizeView>
        <NotAuthorized>
            <div class="login-card">
                <h3 class="login-title">Please login</h3>
                <div class="login-field">
                    <label for="username">Email</label>
                    <input type="text" id="username" @bind="userName" class="login-input"/>
                </div>
                <div class="login-field">
                    <label for="password">Password</label>
                    <input type="password" id="password" @bind="password" class="login-input"/>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="login-error">
                        <span>@errorLabel</span>
                    </div>
                }
                <div class="login-field">
                    <button class="login-button" @onclick="LoginAsync">Log in</button>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            <div class="login-card">
                <h3>Hello, @context.User.Identity.Name</h3>
            </div>
        </Authorized>
    </AuthorizeView>

</CascadingAuthenticationState>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
    // await authService.LoginAsync(userName, password);
    // navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

}