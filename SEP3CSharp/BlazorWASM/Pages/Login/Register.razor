@page "/register"
@using Domain.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager navMgr

<div class="login-card">
    <h3 class="login-title">Register</h3>

    @if (ShowErrors)
    {
        <div class="login-error">
            <span>@Message</span>
        </div>
    }

    <EditForm Model="RegisterModel" OnValidSubmit="HandleRegistration" class="login-form">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="login-field">
            <label for="firstName">First Name</label>
            <input id="firstName" class="login-input" @bind="RegisterModel.FirstName" @bind:event="oninput"/>
            <ValidationMessage For="@(() => RegisterModel.FirstName)"/>
        </div>
        <div class="login-field">
            <label for="lastName">Last Name</label>
            <input id="lastName" class="login-input" @bind="RegisterModel.LastName" @bind:event="oninput"/>
            <ValidationMessage For="@(() => RegisterModel.LastName)"/>
        </div>
        <div class="login-field">
            <label for="email">Email</label>
            <input id="email" class="login-input" type="email" @bind="RegisterModel.Email" @bind:event="oninput"/>
            <ValidationMessage For="@(() => RegisterModel.Email)"/>
        </div>
        <div class="login-field">
            <label for="password">Password</label>
            <input id="password" class="login-input" type="password" @bind="RegisterModel.Password" @bind:event="oninput"/>
            <ValidationMessage For="@(() => RegisterModel.Password)"/>
        </div>
        <div class="login-field">
            <label for="confirmPassword">Confirm Password</label>
            <input id="confirmPassword" class="login-input" type="password" @bind="RegisterModel.ConfirmPassword" @bind:event="oninput"/>
            <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)"/>
        </div>
        <div class="login-field">
            <button type="submit" class="login-button">Register</button>
        </div>
    </EditForm>
</div>

@code {
    private bool ShowErrors { get; } // Make sure setters are present if you intend to modify these properties.
    private string Message { get; }
    private RegisterModel RegisterModel { get; } = new();

    private async Task HandleRegistration()
    {
    // Registration logic goes here
    }

}