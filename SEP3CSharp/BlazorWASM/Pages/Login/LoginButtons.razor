@using Microsoft.AspNetCore.Components
@using BlazorWASM.Services
@using System.Security.Claims
@using HttpClients.ClientInterfaces
@namespace Login
@inject NavigationManager navMgr
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService authService

<AuthorizeView>
    <Authorized>
        <div class="lg-container">
            @if (userClaims.IsInRole("Librarian"))
            {
                <p class="lb-button" @onclick="Register">Opret bruger</p>
            }
            @* <p class="lb-button" @onclick="Register">Rediger bruger</p> *@
            <p class="lb-button" @onclick="Logout">Log ud</p>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="lg-container">
            <p class="lb-button" @onclick="Register">Opret bruger</p>
            <p class="lb-button" @onclick="Login">Login</p>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    ClaimsPrincipal? userClaims;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        userClaims = authState.User;
    }

    private void Login()
    {
        navMgr.NavigateTo("/Login");
    }

    private async Task Logout()
    {
        await authService.LogoutAsync();
        navMgr.NavigateTo("/");
    }

    private void Register()
    {
        navMgr.NavigateTo("/Register");
    }

}